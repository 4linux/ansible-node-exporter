---
version: 2.1

executors:
  python:
    docker:
      - image: cimg/python:3.9

jobs:
  test:
    executor: python
    parameters:
      ansible:
        type: string
    environment:
      ANSIBLE: "<< parameters.ansible >>"
    steps:
      - checkout
      - setup_remote_docker
      - run: ln -s ~/project ~/${CIRCLE_PROJECT_REPONAME}
      - run: pip install -r test-requirements.txt
      - run: molecule test -s default --destroy always
      - run: |
         if [[ -d 'molecule/alternative' ]]; then
           molecule test -s alternative --destroy never
         else
           echo 'No alternative test'
         fi
      - run: |
         if [[ -z "${CIRCLE_PULL_REQUEST}" ]]; then
           molecule test -s latest --destroy never
         else
           echo 'Not running latest on PR'
         fi
  release:
    executor: python
    environment:
      GIT_MAIL: cloudalchemybot@gmail.com
      GIT_USER: cloudalchemybot
      GIT_COMMIT_DESC: git log --format=%B -n 1 ${CIRCLE_SHA1}
    steps:
      - checkout
      - setup_remote_docker
      - run: pip install git-semver
      - run: git config --global user.email "${GIT_MAIL}"
      - run: git config --global user.name "${GIT_USER}"
      - run: |
          GIT_TAG=none
          echo "Last commit message: ${GIT_COMMIT_DESC}"
          case "${GIT_COMMIT_DESC}" in
            *"[patch]"*|*"[fix]"*|*"[bugfix]"* )   GIT_TAG=$(git semver --next-patch) ;;
            *"[minor]"*|*"[feat]"*|*"[feature]"* ) GIT_TAG=$(git semver --next-minor) ;;
            *"[major]"*|*"[breaking change]"* )    GIT_TAG=$(git semver --next-major) ;;
            *) echo "Keyword not detected. Doing nothing" ;;
          esac
          echo "GIT_TAG=${GIT_TAG}" >> $BASH_ENV
          if [ "${GIT_TAG}" != "none" ]; then
              echo "Assigning new tag: ${GIT_TAG}"
              git tag "${GIT_TAG}" -a -m "Automatic tag generation for travis build no. ${CIRCLE_BUILD_NUM}"
              git push "https://${GH_TOKEN}:@${GIT_URL}" --tags || circleci-agent step halt
          fi
      - run: |
          docker run -it --rm \
           -v "${CIRCLE_WORKING_DIRECTORY}:/usr/local/src/your-app" \
           -u "${CIRCLE_PROJECT_USERNAME}" -p "${CIRCLE_PROJECT_REPONAME}" \
           --token "${GH_TOKEN}" \
           --release-url "https://galaxy.ansible.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME#ansible-}" \
           --unreleased-label "**Next release**" --no-compare-link
      - run: git add CHANGELOG.md
      - run: git commit -m '[ci skip] Automatic changelog update'
      - run: git push "https://${GH_TOKEN}:@${GIT_URL}" || circleci-agent step halt
      - run: |
          if [[ "${GIT_TAG}" != "none" ]]; then
            docker run -it \
              -e CHANDLER_GITHUB_API_TOKEN="${GH_TOKEN}" \
              -v "${CIRCLE_WORKING_DIRECTORY}:/chandler" \
              whizark/chandler push "${GIT_TAG}"
          fi

workflows:
  version: 2
  molecule:
    jobs:
      - test:
          matrix:
            parameters:
               ansible:
                 - "2.9"
                 - "2.10"
          filters:
            tags:
              only: /.*/
      - release:
          context: release
          requires:
            - test
          filters:
            branches:
              only: master

